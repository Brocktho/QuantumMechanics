(this["webpackJsonpphys-410-site"]=this["webpackJsonpphys-410-site"]||[]).push([[0],{10:function(e,t,n){},18:function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),s=n(4),c=n.n(s),l=(n(10),n(0));var i=function(){return Object(l.jsxs)("div",{className:"flex flex-row justify-around w-screen h-16 dark:bg-black dark:text-white",children:[Object(l.jsx)("button",{className:"flex text-center font-bold border-r-2 border-black dark:border-white text-xl w-1/2 items-center justify-center",children:"Unit 1"}),Object(l.jsx)("button",{className:"flex text-center font-bold border-black dark:border-white text-xl w-1/2 items-center justify-center",children:"Unit 2"})]})},o=n(2),b=n(5),x=n.n(b);var h=function(){var e=Object(a.useState)(5),t=Object(o.a)(e,2),n=t[0],r=t[1],s=Object(a.useState)(1),c=Object(o.a)(s,2),i=c[0],b=c[1],h=Object(a.useState)(2.5),d=Object(o.a)(h,2),u=d[0],j=d[1],f=Array.from({length:Math.floor(100*n)},(function(e,t){return.01*t})),m=Array.from({length:Math.floor(100*n)},(function(e,t){return Math.sqrt(2/n)*Math.sin(i*Math.PI*t*.01/n)})),g=Array.from({length:Math.floor(100*u)},(function(e,t){return.01*t})),O=Array.from({length:Math.floor(100*u)},(function(e,t){return Math.abs(Math.sqrt(2/n)*Math.sin(i*Math.PI*t*.01/n)*Math.sin(i*Math.PI*t*.01/n))})),y=[{x:f,y:m,type:"scatter",mode:"lines",line:{color:"rgb(20, 200, 150)",width:2},xaxis:"x1",yaxis:"y1"},{x:f,y:Array.from({length:Math.floor(100*n)},(function(e,t){return Math.abs(Math.sqrt(2/n)*Math.sin(i*Math.PI*t*.01/n)*Math.sin(i*Math.PI*t*.01/n))})),type:"scatter",mode:"lines",line:{color:"rgba(219, 20, 41, 20)",width:1}},{x:g,y:O,fill:"tozeroy",type:"scatter",mode:"none"}];return Object(l.jsxs)("div",{className:"flex flex-col w-11/12 h-4/5 bg-white dark:bg-black items-center dark:text-white space-y-12",children:[Object(l.jsx)("h1",{className:"text-3xl font-bold text-grey pt-2 h-8",children:" Unit 1: Quantum Mechanic Operators"}),Object(l.jsxs)("div",{className:"flex flex-row w-full h-full space-x-12 justify-around",children:[Object(l.jsxs)("div",{className:"flex flex-row w-3/5 rounded-3xl bg-red-400 items-center justify-around h-1/2",children:[Object(l.jsx)(x.a,{data:y,layout:{width:640,height:480,title:"Sin in Infinite Square Well",xaxis:{title:"Distance"},xaxis2:{title:"Distance"}},scrollZoom:!0}),Object(l.jsx)("form",{className:"flex flex-col space-y-6 bg-red-400 rounded-3xl",children:Object(l.jsxs)("div",{className:"flex flex-col w-full space-y-4 items-center",children:[Object(l.jsxs)("label",{className:"text-white text-sm text-center",children:["Set integration bounds:",Object(l.jsx)("br",{}),Object(l.jsx)("input",{className:"bg-white dark:bg-black dark:text-white text-black w-32 rounded-xl focus:outline-none pl-2",type:"number",pattern:"^-?[0-9]\\d*\\.?\\d*$",value:u,onChange:function(e){return j(e.target.value)}})]}),Object(l.jsxs)("label",{className:"text-white text-sm text-center",children:["Set width:",Object(l.jsx)("br",{}),Object(l.jsx)("input",{className:"bg-white text-black dark:bg-black dark:text-white w-32 rounded-xl focus:outline-none pl-2",type:"number",pattern:"^-?[0-9]\\d*\\.?\\d*$",value:n,onChange:function(e){return r(e.target.value)}})]}),Object(l.jsxs)("label",{className:"text-white text-sm text-center",children:["Set n (integers only):",Object(l.jsx)("br",{}),Object(l.jsx)("input",{className:"bg-white text-black dark:bg-black dark:text-white w-32 rounded-xl focus:outline-none pl-2",type:"number",pattern:"^-?[0-9]\\d*\\?\\d*$",value:i,onChange:function(e){return function(e){e.target.validity.valid&&b(e.target.value)}(e)}})]}),Object(l.jsx)("input",{type:"submit",value:"Submit",className:"rounded-xl w-4/5 bg-gray-800 h-8 text-white cursor-pointer"})]})})]}),Object(l.jsxs)("div",{className:"flex flex-col rounded-xl items-center dark:text-white",children:[Object(l.jsx)("h2",{className:"text-lg font-bold",children:"Explanation of Operators:"}),Object(l.jsxs)("body",{className:"text-sm",children:["Infinite potential well facts: ",Object(l.jsx)("br",{}),"1. will alternate even and odd with respect to the center if V(x) is an even function ",Object(l.jsx)("br",{}),"2. universally if you go up in energy each state has one more node (see graph) ",Object(l.jsx)("br",{}),"3. They are mutually orthogonal, only works if m=n then it normalizes to 1 (Psi(x)^*)(Psi(x)) = 1 (if m = n) ",Object(l.jsx)("br",{}),"4. They are complete, as in any other function can be a linear combination of them just like Fourier! ",Object(l.jsx)("br",{})," ",Object(l.jsx)("br",{}),"Other information: ",Object(l.jsx)("br",{}),"<H>"," is constant through time which shows conservation of energy. ",Object(l.jsx)("br",{}),"Almost any oscillatory motion is simple harmonic if amplitude is small enough. ",Object(l.jsx)("br",{}),"ladder operators come as a result of non commutating operators. ",Object(l.jsx)("br",{}),"a-a+ - a+a- = hbar*Omega ",Object(l.jsx)("br",{}),"a+ is raising and a- is lowering ",Object(l.jsx)("br",{})]})]})]})]})};var d=function(){return Object(l.jsxs)("div",{className:"flex flex-col items-center bg-red-600 w-screen h-screen space-y-16",children:[Object(l.jsx)(i,{className:"flex"}),Object(l.jsx)(h,{className:"flex"})]})},u=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,19)).then((function(t){var n=t.getCLS,a=t.getFID,r=t.getFCP,s=t.getLCP,c=t.getTTFB;n(e),a(e),r(e),s(e),c(e)}))};c.a.render(Object(l.jsx)(r.a.StrictMode,{children:Object(l.jsx)(d,{})}),document.getElementById("root")),u()}},[[18,1,2]]]);
//# sourceMappingURL=main.6dd8ae01.chunk.js.map